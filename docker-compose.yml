services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: ez-tracking-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vital_signs_tracking
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ez-tracking-redis
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Database Migration Service
  migrate:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: ez-tracking-migrate
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/vital_signs_tracking
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: vital_signs_tracking
      DB_USER: postgres
      DB_PASSWORD: postgres
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npm run migrate && echo 'Migrations completed successfully'"
    restart: "no"

  # Backend API Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: ez-tracking-backend
    ports:
      - "5001:5001"
    environment:
      NODE_ENV: development
      PORT: 5001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: vital_signs_tracking
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CORS_ORIGIN: http://0.0.0.0:3000
      DEBUG_AXIOS: "false"  # Set to "true" to enable verbose axios logging
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      EZDERM_USER: ${EZDERM_USER}
      EZDERM_PASS: ${EZDERM_PASS}
    volumes:
      - ./server:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    command: npm run dev

  # Worker Service (for background jobs)
  worker:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: ez-tracking-worker
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: vital_signs_tracking
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DEBUG_AXIOS: "false"  # Set to "true" to enable verbose axios logging
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      EZDERM_USER: ${EZDERM_USER}
      EZDERM_PASS: ${EZDERM_PASS}
    volumes:
      - ./server:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    command: npm run worker:dev

  # Bull Board for Job Monitoring
  bull-board:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: ez-tracking-bull-board
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      BULL_BOARD_PORT: 3001
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./server:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    command: npm run bull-board:dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ez-tracking-frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://0.0.0.0:5001
      CHOKIDAR_USEPOLLING: true
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    depends_on:
      - backend
    stdin_open: true
    tty: true

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ez-tracking-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    profiles:
      - tools

  # Redis Commander for Redis management (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ez-tracking-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  default:
    name: ez-tracking-network 